"use strict";(self.webpackChunkbook_it_coworking_frontend=self.webpackChunkbook_it_coworking_frontend||[]).push([[958],{"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}__webpack_require__.d(__webpack_exports__,{Z:function(){return _slicedToArray}})},"./src/components/RulesQuestions/RulesQuestions.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:function(){return Example},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return RulesQuestions_stories}});var _Example$parameters,_Example$parameters2,_Example$parameters2$,objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),Rules=__webpack_require__("./src/components/Rules/Rules.jsx"),Questions=__webpack_require__("./src/components/Questions/Questions.jsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),RulesQuestions_RulesQuestions=function RulesQuestions(){return(0,jsx_runtime.jsxs)("main",{className:"rules-questions","aria-label":"страница с правилами и вопросами",children:[(0,jsx_runtime.jsx)(Rules.i,{}),(0,jsx_runtime.jsx)(Questions.G,{})]})};RulesQuestions_RulesQuestions.__docgenInfo={description:"",methods:[],displayName:"RulesQuestions"};var RulesQuestions_stories={title:"Pages/RulesQuestions",component:RulesQuestions_RulesQuestions,parameters:{layout:"fullscreen"}},Example={args:{}};Example.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Example.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Example$parameters=Example.parameters)||void 0===_Example$parameters?void 0:_Example$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {}\n}"},null===(_Example$parameters2=Example.parameters)||void 0===_Example$parameters2||null===(_Example$parameters2$=_Example$parameters2.docs)||void 0===_Example$parameters2$?void 0:_Example$parameters2$.source)})});var __namedExportsOrder=["Example"]},"./src/components/QuestionItem/QuestionItem.jsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return QuestionItem_QuestionItem}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function QuestionItem_QuestionItem(_ref){var title=_ref.title,text=_ref.text,_useState=(0,react.useState)("false"),_useState2=(0,slicedToArray.Z)(_useState,2),isActive=_useState2[0],setActive=_useState2[1];return(0,jsx_runtime.jsxs)("div",{className:"question",children:[(0,jsx_runtime.jsxs)("div",{className:"question__container",children:[(0,jsx_runtime.jsx)("h2",{className:"question__title",children:title}),(0,jsx_runtime.jsx)("button",{type:"button",className:isActive?"question__button question__button_active":"question__button",onClick:function handleToggle(){setActive(!isActive)},children:(0,jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",children:[(0,jsx_runtime.jsx)("path",{d:"M18 6L6 18",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,jsx_runtime.jsx)("path",{d:"M6 6L18 18",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]})})]}),(0,jsx_runtime.jsx)("p",{className:isActive?"question__text":"question__text question__text_active",children:text})]})}QuestionItem_QuestionItem.defaultProps={title:void 0,text:void 0},QuestionItem_QuestionItem.__docgenInfo={description:"",methods:[],displayName:"QuestionItem",props:{title:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"string"},required:!1},text:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"string"},required:!1}}}},"./src/components/Questions/Questions.jsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{G:function(){return Questions_Questions}});__webpack_require__("./node_modules/react/index.js");var SectionTitle=__webpack_require__("./src/components/SectionTitle/SectionTitle.jsx"),QuestionItem=__webpack_require__("./src/components/QuestionItem/QuestionItem.jsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),data=[{title:"Что такое коворкинг и как он работает?",text:"Коворкинг — это общее рабочее пространство, где люди разных компаний и профессий могут арендовать рабочие места. В коворкинге обычно есть общие зоны, конференц-залы и инфраструктура, такие как принтеры и интернет. Пользователи арендуют место на определённое время и платят за это."},{title:"Как я могу забронировать рабочее место в вашем коворкинге? ",text:"Коворкинг — это общее рабочее пространство, где люди разных компаний и профессий могут арендовать рабочие места. В коворкинге обычно есть общие зоны, конференц-залы и инфраструктура, такие как принтеры и интернет. Пользователи арендуют место на определённое время и платят за это."},{title:"Могу ли я заранее забронировать конкретное место?",text:"Коворкинг — это общее рабочее пространство, где люди разных компаний и профессий могут арендовать рабочие места. В коворкинге обычно есть общие зоны, конференц-залы и инфраструктура, такие как принтеры и интернет. Пользователи арендуют место на определённое время и платят за это."},{title:"Могу ли я внести изменения в свою бронь или отменить ее?",text:"Коворкинг — это общее рабочее пространство, где люди разных компаний и профессий могут арендовать рабочие места. В коворкинге обычно есть общие зоны, конференц-залы и инфраструктура, такие как принтеры и интернет. Пользователи арендуют место на определённое время и платят за это."},{title:"Включены ли дополнительные услуги в стоимость бронирования?",text:"Коворкинг — это общее рабочее пространство, где люди разных компаний и профессий могут арендовать рабочие места. В коворкинге обычно есть общие зоны, конференц-залы и инфраструктура, такие как принтеры и интернет. Пользователи арендуют место на определённое время и платят за это."},{title:"Какой срок действия моей брони?",text:"Коворкинг — это общее рабочее пространство, где люди разных компаний и профессий могут арендовать рабочие места. В коворкинге обычно есть общие зоны, конференц-залы и инфраструктура, такие как принтеры и интернет. Пользователи арендуют место на определённое время и платят за это."},{title:"Какая безопасность и конфиденциальность предоставляется в коворкинге?",text:"Коворкинг — это общее рабочее пространство, где люди разных компаний и профессий могут арендовать рабочие места. В коворкинге обычно есть общие зоны, конференц-залы и инфраструктура, такие как принтеры и интернет. Пользователи арендуют место на определённое время и платят за это."}];function Questions_Questions(){return(0,jsx_runtime.jsxs)("section",{className:"questions",children:[(0,jsx_runtime.jsx)(SectionTitle.N,{titleText:"Часто задаваемые вопросы"}),(0,jsx_runtime.jsx)("ul",{className:"questions__list",children:data.map((function(item){return(0,jsx_runtime.jsx)("li",{children:(0,jsx_runtime.jsx)(QuestionItem.Z,{title:item.title,text:item.text})})}))})]})}Questions_Questions.__docgenInfo={description:"",methods:[],displayName:"Questions"}}}]);